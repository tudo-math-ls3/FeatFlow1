#include <stdio.h>
#include <string.h>
#include <ctype.h>
#include <avs/flow.h>
#include <avs/avs.h>
#include <avs/field.h>

#define cb "\
  panel \"$Module\"  -p ui -xy 684,36 -wh 273,397\n\
  manip \"$Module:File name\" -w browser -p \"$Module\" -xy 13,9 -wh 248,194\n\
  manip \"$Module:Animation On\/Off\" -w toggle -p \"$Module\" -xy 27,220 -wh 118,22\n\
  manip \"$Module:Nr. frames\" -w idial -p \"$Module\" -xy 25,254 -wh 90,130\n\
  manip \"$Module:Current frame\" -w idial -p \"$Module\" -xy 154,254 -wh 90,130\n\
"

#define FORMATS ".inp.fld.x.rla.rlb.geom.ppm.gif.tiff"

static int  anim=1,cur_anim=1;
static char file[100];
static unsigned nr_digits=0,first_step=1;
static char line[200],string[20],name[200],*end_step;
static char format[40];

int  read_seq_desc()
{

  int  param;

  AVSset_module_name("ReadSeqAnim",MODULE_DATA);


  AVScreate_output_port("File","string");
  param=AVSadd_parameter("File name","string",0,0,FORMATS);
  AVSconnect_widget(param,"browser");

  param=AVSadd_parameter("Animation On/Off","boolean",1,0,1);
  param=AVSadd_parameter("Nr. frames","integer",256,1,256);
  param=AVSadd_parameter("Current frame","integer",1,1,256);
}



char  *get_seq(file)
char  *file;
{
   char  *ptr;
   int   i=0;


   ptr=file+(strlen(file)-1);

   while((*ptr !='.'))
       if((*ptr=='/')|| (ptr==file))
	   return NULL;
       else ptr--;
   end_step=ptr+1;
   ptr--;

   for(i=0; (*ptr !='.') && (isdigit(*ptr)) ; i++,--ptr)
	 if(ptr==file) return NULL;
   if(*ptr=='.'){ /*OK*/
     first_step=atoi(++ptr);
     nr_digits=i;
     return ptr;
   }else
      return NULL ;
}

void get_num_files(ptr,steps)
char *ptr;
int  *steps;
{
  FILE *file;

  *steps=1;
  while(1) {
    sprintf(ptr,"%d.",*steps);
    strcat(line,string);
    
    fprintf(stderr,"ReadSeqAnim:name:%s \n",line);
    file=fopen(line,"r");
    if(!file) { 
      (*steps)--;
      return;
    }
    fclose(file);
    (*steps)++;
  }
}



int main(argc,argv)
int argc;
char *argv[];

{  
    int  read_seq_desc();
    char *get_seq();
    int  c_step;
    char *file_name;
    int  nrframes,i;
    char *ob,*eb ;
    char  *ptr,*ptr1;
    int nrsteps=0;


    AVScorout_init(argc,argv,read_seq_desc);
    AVScorout_set_sync(0);
    AVScommand("kernel",cb,&ob,&eb);
    cur_anim=1;

 while(1){
       if(cur_anim) AVScorout_wait();
       AVScorout_input(&file_name,&anim,&nrframes,&c_step);


       nrsteps=nrframes;
       cur_anim=anim ;


       if(AVSparameter_changed("Nr. frames"))
         AVSmodify_parameter("Current frame",AVS_VALUE|AVS_MINVAL|AVS_MAXVAL,
			      1,1,(nrsteps==1)? nrsteps+1:nrsteps);

       if(AVSparameter_changed("Current frame"))
	 first_step=c_step;

       if(AVSparameter_changed("File name")){

         strcpy(line,file_name);

         if((ptr=get_seq(line))==NULL){
            AVSmessage("ReadSeqAnim :",AVS_Warning,AVSmodule,"ReadSeqAnim",
	              "OK","Can't detect the seq\n");
            AVScorout_wait() ;
	 } else {
	   strcpy(string,end_step);
	   *ptr='\0';
	   strcpy(name,line);
	   
	   get_num_files(ptr,&nrsteps);
	   AVSmodify_parameter("Nr. frames",AVS_MAXVAL,
			       1,1,(nrsteps==1)? nrsteps+1:nrsteps);

           AVSmodify_parameter("Current frame",AVS_MAXVAL,
			       1,1,(nrsteps==1)? nrsteps+1:nrsteps);
	 }
       }

       if(cur_anim || !file_name ) continue ;


      /* format[0]='%';
       format[1]='0';
       sprintf(string,"%d",nr_digits);
       strcpy(&format[2],string);
       ptr1=format+ strlen(format);
       *ptr1='d';
       *++ptr1='\0';*/


       for(i=first_step; i <= nrsteps; i++){
	 sprintf(ptr,"%d.",i);
	 strcat(line,string);
        
	 /*sprintf(ptr,format,i-1+first_step);
         ptr1=ptr+strlen(ptr);
         *ptr1='.';*/

         AVScorout_exec();
         AVScorout_output(line);

         AVSmodify_parameter("Current frame",AVS_VALUE|AVS_MINVAL|AVS_MAXVAL,
              i,1,(nrsteps==1)? nrsteps+1: nrsteps);

         fprintf(stderr,"ReadSeqAnim:nr_steps:%d file:%s step:%d\n",nrsteps,line,i);
         AVScorout_input(&file_name,&anim,&nrframes,&c_step);
	    if(anim)
	      break;
       }
       AVSmodify_parameter("Animation On/Off",AVS_VALUE,1,0,1);
       cur_anim=1;
      
  }
}
